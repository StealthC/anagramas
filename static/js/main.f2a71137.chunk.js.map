{"version":3,"sources":["features/anagramaGame/SavedGame.ts","features/anagramaGame/AnagramAPI.ts","components/game-list-item.tsx","components/game-list.tsx","features/anagramaGame/anagramaGameSlice.ts","app/hooks.ts","features/anagramaGame/shopSlice.ts","components/buy-mode-button.tsx","components/letter.tsx","components/letters.tsx","components/solution.tsx","components/solutions.tsx","components/word.tsx","components/game.tsx","components/game-loader.tsx","components/latest-game.tsx","components/latest-save.tsx","components/main.tsx","components/top-menu.tsx","App.tsx","features/anagramaGame/configSlice.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["GetSavedGame","anagramaNormalizado","saved","localStorage","getItem","JSON","parse","GetLatestSavedGameAnagram","list","Object","keys","filter","value","startsWith","map","sort","a","b","updated","localeCompare","length","anagram","IsSaved","s","solved","IsSolved","anagramaGame","solutions","forEach","solution","SaveGame","word","game","Date","toJSON","setItem","stringify","created","getRachacucaAnagrama","normalizedAnagrama","axios","get","process","getTime","response","data","slug","ConvertAnagrama2021","anagrama","id","palavra","normalize_word","split","join","palavras","words","palavras_normalized","w","getRachacucaAnagramaIndex","getRachacucaAnagramGamesInOrder","index","result","byDate","reverse","find","item","push","date","anagrams","getLastRachacucaGame","games","convertRachacucaToAnagramaGame","rcAnagrama","currentWord","letters","_","shuffle","letter","used","normalizedSolution","normalize","replace","toLowerCase","GameListItemComponent","props","toLocaleDateString","className","ClassNames","toUpperCase","to","GameListComponent","useState","anagramas","setAnagramas","error","setError","useEffect","SaveGameThunk","dispatch","getState","shuffleLetters","createAsyncThunk","_arg","thunkAPI","l","buySolutionLetter","solutionItem","selectAnagramaSolution","partial","random","anagramaGameSlice","actions","buyLetter","includes","createSlice","name","initialState","reducers","setAnagramaData","state","action","payload","clearLetters","selectLetter","undefined","findIndex","sIndex","solutionIndex","repeat","splittedPartial","extraReducers","builder","addCase","fulfilled","selectAnagramaWord","selectAnagramaSolutions","useAppDispatch","useDispatch","shopSlice","useSelector","buyLetterMode","setBuyMode","toggleBuyMode","selectBuyMode","shop","BuyModeButtonComponent","buyMode","onClick","style","lineBreak","maxWidth","display","AnagramaLetterComponent","width","height","lineHeight","textAlign","verticalAlign","padding","ev","currentTarget","disabled","AnagramaLettersComponent","then","AnagramaSolutionComponent","AnagramaSolutionsComponent","AnagramaWordComponent","Button","type","AnagramaGameComponent","total","handleKeyDown","useCallback","evt","key","window","addEventListener","removeEventListener","position","GameLoaderComponent","useParams","loaded","setLoaded","gameData","LatestGameComponent","setAnagrama","LatestSaveComponent","MainComponent","as","NavLink","TopMenuComponent","Navbar","bg","variant","expand","Brand","Toggle","Collapse","Nav","Link","App","document","documentElement","navigator","maxTouchPoints","body","path","exact","component","configSlice","autoScroll","setAutoScroll","toggleAutoScroll","store","configureStore","reducer","anagramaGameReducer","shopReducer","config","configReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f2a71137.chunk.js","sourcesContent":["import { AnagramaGame, SavedGame } from '../../interfaces'\n\nexport function GetSavedGame(anagramaNormalizado: string): SavedGame | null {\n  const saved = localStorage.getItem('saved:' + anagramaNormalizado)\n  if (saved) {\n    return JSON.parse(saved) as SavedGame\n  }\n  return null\n}\n\nexport function GetLatestSavedGameAnagram(): string | null {\n  const list = GetOrderedSave()\n  if (list.length === 0) return null\n  return list[list.length - 1].anagram\n}\n\nexport interface SavedMetadata {\n  saved: boolean\n  solved: boolean\n}\n\nexport function IsSaved(anagram: string): SavedMetadata {\n  const s = GetSavedGame(anagram)\n  if (s) {\n    return {\n      saved: true,\n      solved: s.solved,\n    }\n  }\n  return { saved: false, solved: false }\n}\n\nexport function GetAllSavedGames(): SavedGame[] {\n  return Object.keys(localStorage)\n    .filter((value) => value.startsWith('saved'))\n    .map(\n      (value) => JSON.parse(localStorage.getItem(value) as string) as SavedGame\n    )\n}\n\nexport function GetOrderedSave(): SavedGame[] {\n  return GetAllSavedGames().sort((a, b) => a.updated.localeCompare(b.updated))\n}\n\nexport function IsSolved(anagramaGame: AnagramaGame): boolean {\n  anagramaGame.solutions.forEach(solution => {\n    if (!solution.solved) {\n      return false;\n    }\n  });\n  return true;\n}\n\nexport function SaveGame(anagramaGame: AnagramaGame): void {\n  const saved = GetSavedGame(anagramaGame.word.anagram)\n  if (saved) {\n    saved.game = anagramaGame\n    saved.updated = new Date().toJSON()\n    saved.solved = IsSolved(anagramaGame)\n    localStorage.setItem(\n      'saved:' + anagramaGame.word.anagram,\n      JSON.stringify(saved)\n    )\n  } else {\n    localStorage.setItem(\n      'saved:' + anagramaGame.word.anagram,\n      JSON.stringify({\n        anagram: anagramaGame.word.anagram,\n        created: new Date().toJSON(),\n        updated: new Date().toJSON(),\n        game: anagramaGame,\n        solved: IsSolved(anagramaGame)\n      } as SavedGame)\n    )\n  }\n}\n","import axios from 'axios'\nimport _ from 'lodash'\nimport {\n  AnagramaGame,\n  RachaCucaAnagramas,\n  RachaCucaAnagramas2021,\n  RachaCucaAnagramasIndex,\n} from '../../interfaces'\nimport { IsSaved, SavedMetadata } from './SavedGame'\n\nexport async function getRachacucaAnagrama(normalizedAnagrama: string) {\n  const response = await axios.get<RachaCucaAnagramas | RachaCucaAnagramas2021>(\n    `${\n      process.env.PUBLIC_URL\n    }/dump/${normalizedAnagrama}.json?timestamp=${new Date().getTime()}`\n  )\n  if (response.data) {\n    if ((response.data as RachaCucaAnagramas2021).slug) {\n      return ConvertAnagrama2021(response.data as RachaCucaAnagramas2021)\n    }\n  }\n  return response.data as RachaCucaAnagramas\n}\n\nexport function ConvertAnagrama2021(anagrama: RachaCucaAnagramas2021): RachaCucaAnagramas {\n  return {\n    id: -1,\n    palavra: normalize_anagram(anagrama.word),\n    palavras: anagrama.words,\n    palavras_normalized: anagrama.words.map((w) => normalize_word(w))\n  }\n}\n\n\nexport async function getRachacucaAnagramaIndex() {\n  const response = await axios.get<RachaCucaAnagramasIndex>(\n    `${\n      process.env.PUBLIC_URL\n    }/dump/index.json?timestamp=${new Date().getTime()}`\n  )\n  return response.data\n}\n\nexport interface AnagramaMetaData extends SavedMetadata {\n  anagrama: string\n  date?: string\n}\n\nexport async function getRachacucaAnagramGamesInOrder(): Promise<\n  AnagramaMetaData[]\n> {\n  const index = await getRachacucaAnagramaIndex()\n  const result: AnagramaMetaData[] = []\n  index.byDate.reverse().forEach((value) => {\n    if (!result.find((item) => value.anagram === item.anagrama)) {\n      result.push({ ...IsSaved(value.anagram), anagrama: value.anagram, date: value.date })\n    }\n  })\n  index.anagrams.forEach((value) => {\n    if (!result.find((item) => value === item.anagrama)) {\n      result.push({ ...IsSaved(value), anagrama: value })\n    }\n  })\n  return result\n}\nexport async function getLastRachacucaGame() {\n  const games = await getRachacucaAnagramaIndex()\n  return games.byDate[games.byDate.length - 1].anagram\n}\n\nexport function convertRachacucaToAnagramaGame(\n  rcAnagrama: RachaCucaAnagramas\n): AnagramaGame {\n  const gameData: AnagramaGame = {\n    word: {\n      anagram: rcAnagrama.palavra,\n      currentWord: '',\n      letters: _.shuffle(rcAnagrama.palavra.split('')).map((letter, index) => ({\n        letter: letter,\n        used: false,\n        index,\n      })),\n    },\n    solutions: rcAnagrama.palavras.map((palavra, index) => ({\n      solution: palavra,\n      normalizedSolution: rcAnagrama.palavras_normalized[index],\n      solved: false,\n    })),\n  }\n  return gameData\n}\n\n\nexport function normalize_word(word: string): string {\n  return word.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\n}\nexport function normalize_anagram(anagram: string): string {\n  return normalize_word(anagram).split(\"\").sort().join(\"\");\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { AnagramaMetaData } from '../features/anagramaGame/AnagramAPI'\nimport ClassNames from 'classnames'\n\nexport interface GameListItemComponentProps extends AnagramaMetaData {}\n\nexport function GameListItemComponent(props: GameListItemComponentProps) {\n  const anagrama = props\n  const date = anagrama.date ? new Date(anagrama.date).toLocaleDateString() : \"Desconhecido\"\n  return (\n    <div className=\"row\" key={anagrama.anagrama}>\n      <div className=\"col my-1\">\n        <div\n          className={ClassNames([\n            'card',\n            'text-light',\n            {\n              'bg-primary': anagrama.saved,\n              'bg-secondary': !anagrama.saved,\n              'bg-success': anagrama.solved,\n            },\n          ])}\n        >\n          <div className=\"card-header\">\n            {' '}\n            {anagrama.anagrama.toUpperCase()} ({anagrama.anagrama.length} Letras)\n            <NavLink\n              className=\"btn text-light float-end m-0 p-0\"\n              to={`/game/${anagrama.anagrama}`}\n            >\n              Jogar\n            </NavLink>\n          </div>\n          <div className=\"card-body\">\n            <ul>\n              <li>Data: {date}</li>\n              <li>Salvo: {anagrama.saved ? 'Sim' : 'Não'}</li>\n              <li>Finalizado: {anagrama.solved ? 'Sim' : 'Não'}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useEffect } from 'react'\nimport { useState } from 'react'\nimport {\n  AnagramaMetaData,\n  getRachacucaAnagramGamesInOrder,\n} from '../features/anagramaGame/AnagramAPI'\nimport { GameListItemComponent } from './game-list-item'\n\nexport function GameListComponent() {\n  const [anagramas, setAnagramas] = useState<AnagramaMetaData[] | null>(null)\n  const [error, setError] = useState<string | null>(null)\n  useEffect(() => {\n    ;(async () => {\n      try {\n        setAnagramas(await getRachacucaAnagramGamesInOrder())\n      } catch (e) {\n        setError('Não foi possível carregar a lista de jogos.')\n      }\n    })()\n  }, [])\n  if (error) {\n    return <div>{error}</div>\n  }\n  if (anagramas) {\n    return (\n      <div className=\"d-flex flex-column\">\n        {anagramas.map(GameListItemComponent)}\n      </div>\n    )\n  }\n  return <div>Carregando...</div>\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { RootState, AppThunk } from '../../app/store'\nimport { AnagramaGame, AnagramaLetter } from '../../interfaces'\nimport _ from 'lodash'\nimport { SaveGame } from './SavedGame'\n\nexport const SaveGameThunk = (): AppThunk => async (dispatch, getState) => {\n  SaveGame(getState().anagramaGame)\n}\n\nexport const shuffleLetters = createAsyncThunk<\n  AnagramaLetter[],\n  void,\n  {\n    // Optional fields for defining thunkApi field types\n    state: RootState\n  }\n>('anagramas/shuffleLetters', async (_arg, thunkAPI) => {\n  const letters = thunkAPI.getState().anagramaGame.word.letters\n  return _.shuffle(letters).map((l, index) => ({ ...l, index }))\n})\n\n\nexport const buySolutionLetter = createAsyncThunk(\n  'anagramas/buySolutionLetter',\n  async (solution: string, thunkAPI) => {\n    const solutionItem = selectAnagramaSolution(thunkAPI.getState() as any, solution)\n    if (solutionItem && !solutionItem.solved) {\n      if (!solutionItem.partial) {\n        const index = _.random(0, solutionItem.solution.length - 1)\n        thunkAPI.dispatch(anagramaGameSlice.actions.buyLetter({solution, index}))\n\n      } else {\n        while (solutionItem.partial.includes('?')) {\n          const index = _.random(0, solutionItem.solution.length - 1)\n          if (solutionItem.partial[index] === '?') {\n            thunkAPI.dispatch(anagramaGameSlice.actions.buyLetter({solution, index}))\n            break;\n          }\n        }\n      }\n    }\n  }\n)\n\nexport interface AnagramaGameState extends AnagramaGame {}\n\nconst initialState: AnagramaGameState = {\n  solutions: [],\n  word: {\n    anagram: '',\n    currentWord: '',\n    letters: [],\n  },\n}\n\nexport const anagramaGameSlice = createSlice({\n  name: 'anagramaGame',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    setAnagramaData: (state, action: PayloadAction<AnagramaGame>) => {\n      return action.payload\n    },\n    clearLetters: (state) => {\n      state.word.currentWord = ''\n      state.word.letters = state.word.letters.map((l) => ({\n        ...l,\n        used: false,\n      }))\n    },\n    selectLetter: (\n      state,\n      action: PayloadAction<{ letter: string; index?: number }>\n    ) => {\n      let { letter, index } = action.payload\n      if (index === undefined) {\n        index = state.word.letters.findIndex(\n          (l) => !l.used && l.letter.toUpperCase() === letter.toUpperCase()\n        )\n      }\n      if (index >= 0) {\n        state.word.letters[index].used = true\n        state.word.currentWord += letter.toUpperCase()\n\n        //Checa se há soluções\n        const sIndex = state.solutions.findIndex(\n          (s) =>\n            !s.solved &&\n            s.normalizedSolution.toUpperCase() ===\n              state.word.currentWord.toUpperCase()\n        )\n        if (sIndex >= 0) {\n          state.solutions[sIndex].solved = true\n          wordSolved(sIndex)\n          state.word.currentWord = ''\n          state.word.letters = state.word.letters.map((l) => ({\n            ...l,\n            used: false,\n          }))\n        }\n      }\n    },\n    buyLetter: (\n      state,\n      action: PayloadAction<{ solution: string, index: number }>\n    ) => {\n      const {solution, index} = action.payload\n      const solutionIndex = state.solutions.findIndex((s) => s.solution === solution)\n      const solutionItem = state.solutions[solutionIndex]\n      if (solutionItem && !solutionItem.solved) {\n        if (index >= 0 && index < solutionItem.solution.length) {\n          if (!solutionItem.partial) {\n            solutionItem.partial = '?'.repeat(solution.length)\n          }\n          let splittedPartial = solutionItem.partial.split('')\n          splittedPartial[index] = solution[index].toUpperCase()\n          solutionItem.partial = splittedPartial.join(\"\")\n          if (!solutionItem.partial.includes('?')) {\n            solutionItem.solved = true\n            wordSolved(solutionIndex)\n          }\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(shuffleLetters.fulfilled, (state, { payload }) => {\n      state.word.letters = payload\n    })\n  },\n})\n\nfunction wordSolved(solutionIndex: number) {\n  //const solution = document.getElementById(\"sol\" + solutionIndex)\n  //solution?.scrollIntoView({behavior: \"smooth\", block: \"center\", inline: \"center\"});\n}\n\nexport const {\n  setAnagramaData,\n  clearLetters,\n  selectLetter,\n  buyLetter,\n} = anagramaGameSlice.actions\n\nexport const selectAnagramaGame = (state: RootState) => state.anagramaGame\nexport const selectAnagramaWord = (state: RootState) => state.anagramaGame.word\nexport const selectAnagramaSolutions = (state: RootState) =>\n  state.anagramaGame.solutions\nexport const selectAnagramaSolution = (state: RootState, solution: string) => state.anagramaGame.solutions.find((s) => s.solution === solution)\n\nexport default anagramaGameSlice.reducer\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\n\nexport interface ShopState {\n  buyLetterMode: boolean\n}\n\nconst initialState: ShopState = {\n  buyLetterMode: false\n}\n\nexport const shopSlice = createSlice({\n  name: 'shop',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    setBuyMode: (state, action: PayloadAction<boolean>) => {\n      state.buyLetterMode = action.payload\n    },\n    toggleBuyMode: (state) => {\n      state.buyLetterMode = !state.buyLetterMode\n    },\n  },\n})\n\nexport const {\n  setBuyMode,\n  toggleBuyMode\n} = shopSlice.actions\n\nexport const selectShop = (state: RootState) => state.shop\nexport const selectBuyMode = (state: RootState) => state.shop.buyLetterMode\n\n\nexport default shopSlice.reducer\n","import React from 'react'\nimport ClassNames from 'classnames'\nimport { useSelector } from 'react-redux'\nimport { selectBuyMode, toggleBuyMode } from '../features/anagramaGame/shopSlice'\nimport { useAppDispatch } from '../app/hooks'\n\nexport function BuyModeButtonComponent() {\n  const buyMode = useSelector(selectBuyMode)\n  const dispatch = useAppDispatch()\n\n\n  const handleClick = () => {\n    dispatch(toggleBuyMode())\n  }\n\n\n    return (\n      <button\n        onClick={handleClick}\n        className={ClassNames([\n          'btn',\n          'btn-outline-primary',\n          'float-end',\n          {\"active\": buyMode}\n        ])}\n        style={{ lineBreak: 'loose', maxWidth: '10em', display: 'block' }}\n      >\n        <i className=\"bi bi-cart\"></i>\n      </button>\n    )\n}\n","import React from 'react'\nimport ClassNames from 'classnames'\nimport { useAppDispatch } from '../app/hooks'\nimport {\n  SaveGameThunk,\n  selectLetter,\n} from '../features/anagramaGame/anagramaGameSlice'\nimport { AnagramaLetter } from '../interfaces'\n\nexport function AnagramaLetterComponent(props: AnagramaLetter) {\n  const dispatch = useAppDispatch()\n\n  const { letter, index, used } = props\n  const handleClick = (ev: React.MouseEvent<HTMLButtonElement>) => {\n    if (used) return;\n    ev.currentTarget.disabled = true;\n    ev.currentTarget.disabled = false;\n    dispatch(selectLetter({ letter, index }))\n    dispatch(SaveGameThunk())\n\n  }\n\n  return (\n    <button\n      className={ClassNames([\n        \"m-1 fs-1 btn btn-lg btn-outline-dark shadow letter-box\",\n        {\"active\": used}\n      ])}\n      style={{\n        width: '2em',\n        height: '2em',\n        lineHeight: '2em',\n        textAlign: 'center',\n        verticalAlign: 'middle',\n        padding: '0',\n        //fontSize: '1.2em',\n      }}\n      //disabled={used}\n      onClick={handleClick}\n    >\n      {letter.toUpperCase()}\n    </button>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from '../app/hooks'\nimport {\n  SaveGameThunk,\n  selectAnagramaWord,\n  shuffleLetters,\n} from '../features/anagramaGame/anagramaGameSlice'\n\nimport { AnagramaLetterComponent } from './letter'\n\nexport function AnagramaLettersComponent() {\n  const dispatch = useAppDispatch()\n  const word = useSelector(selectAnagramaWord)\n  const { letters } = word\n  const handleShuffle = () => {\n    dispatch(shuffleLetters()).then(() => {\n      dispatch(SaveGameThunk())\n    })\n  }\n  return (\n    <div className=\"d-flex flex-row text-center my-3\">\n      <div className=\"row flex-fill\">\n        <div className=\"col\">\n          {letters.map((letter) => {\n            return (\n              <AnagramaLetterComponent\n                key={letter.letter + letter.index}\n                {...letter}\n              />\n            )\n          })}\n        </div>\n      </div>\n\n      <button className=\"btn btn-outline-warning mt-2\" onClick={handleShuffle}>\n        Misturar\n      </button>\n    </div>\n  )\n}\n","import React from 'react'\nimport ClassNames from 'classnames'\nimport { AnagramaSolution } from '../interfaces'\nimport { useSelector } from 'react-redux'\nimport { selectBuyMode, setBuyMode } from '../features/anagramaGame/shopSlice'\nimport {\n  buySolutionLetter,\n  SaveGameThunk,\n} from '../features/anagramaGame/anagramaGameSlice'\nimport { useAppDispatch } from '../app/hooks'\n\nexport interface SolutionComponentProps {\n  index: number\n  solution: AnagramaSolution\n}\n\nexport function AnagramaSolutionComponent(props: SolutionComponentProps) {\n  const { solution, solved, partial } = props.solution\n  const { index } = props\n  const buyMode = useSelector(selectBuyMode)\n  const dispatch = useAppDispatch()\n\n  function getString() {\n    if (solved) {\n      return solution.toUpperCase()\n    } else {\n      if (partial) {\n        return partial\n      } else {\n        return '?'.repeat(solution.length)\n      }\n    }\n  }\n\n  const handleBuy = () => {\n    dispatch(buySolutionLetter(solution)).then(() => {\n      dispatch(setBuyMode(false))\n      dispatch(SaveGameThunk())\n    })\n  }\n\n\n  return (<div className=\"col-3 col-md-2 d-grid\">\n  <button\n    id={\"sol\" + index}\n    onClick={handleBuy}\n    disabled={!buyMode || solved}\n    className={ClassNames([\n      'btn',\n      {'btn-outline-primary': buyMode && !solved},\n      {'btn-success': solved},\n      {'btn-outline-danger': partial && !solved},\n    ])}\n    //style={{ lineBreak: 'loose', maxWidth: '10em', display: 'block' }}\n  >\n    {getString()}\n  </button>\n</div>)\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectAnagramaSolutions } from '../features/anagramaGame/anagramaGameSlice'\nimport { AnagramaSolutionComponent } from './solution'\nexport function AnagramaSolutionsComponent() {\n  const solutions = useSelector(selectAnagramaSolutions)\n  return (\n\n\n            <div className=\"row d-flex align-items-start flex-row text-center overflow-auto g-1\">\n            {solutions.map((solution, index) => {\n            return (\n              <AnagramaSolutionComponent\n                index={index}\n                solution={solution}\n                key={solution.solution}\n              />\n            )\n          })}\n            </div>\n\n\n  )\n}\n","import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from '../app/hooks'\nimport {\n  clearLetters,\n  SaveGameThunk,\n  selectAnagramaWord,\n} from '../features/anagramaGame/anagramaGameSlice'\n\nexport function AnagramaWordComponent() {\n  const dispatch = useAppDispatch()\n  const word = useSelector(selectAnagramaWord)\n  const { currentWord } = word\n  const handleClear = () => {\n    dispatch(clearLetters())\n    dispatch(SaveGameThunk())\n  }\n  return (\n    (word.currentWord !== '') ? (<div className=\"d-flex flex-row border border-info text-info\">\n    <div className=\"row flex-fill p-0 m-0\">\n      <div className=\"col text-center my-2\">{currentWord}&nbsp;</div>\n    </div>\n    {word.currentWord !== '' ? (<div className=\"row\">\n      <div className=\"col\">\n        <Button\n          type=\"button\"\n          className=\"btn-close float-end my-3 me-2\"\n          onClick={handleClear}\n        />\n      </div>\n    </div>) : null}\n\n  </div>) : null)\n}\n","import React, { useCallback, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from '../app/hooks'\nimport {\n  clearLetters,\n  SaveGameThunk,\n  selectAnagramaSolutions,\n  selectLetter,\n} from '../features/anagramaGame/anagramaGameSlice'\nimport { BuyModeButtonComponent } from './buy-mode-button'\nimport { AnagramaLettersComponent } from './letters'\nimport { AnagramaSolutionsComponent } from './solutions'\nimport { AnagramaWordComponent } from './word'\n\nexport function AnagramaGameComponent() {\n  const dispatch = useAppDispatch()\n  const solutions = useSelector(selectAnagramaSolutions)\n  const total = solutions.length\n  const solved = solutions.filter((s) => s.solved).length\n  const handleKeyDown = useCallback(\n    (evt: KeyboardEvent) => {\n      if (evt.key.length === 1) {\n        const letter = evt.key\n          .normalize('NFD')\n          .replace(/[\\u0300-\\u036f]/g, '')\n          .toUpperCase()\n        dispatch(selectLetter({ letter }))\n        dispatch(SaveGameThunk())\n      } else if (evt.key === 'Backspace') {\n        dispatch(clearLetters())\n        dispatch(SaveGameThunk())\n      }\n    },\n    [dispatch]\n  )\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown)\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [handleKeyDown])\n  return (\n    <div className=\"container flex-fill d-flex flex-column\">\n      <div className=\"row card flex-fill bg-light d-flex my-2\">\n        <div className=\"card-header py-0\">\n        <div className=\"row\">\n          <h5 className=\"col-6 my-3\">\n            Palavras ({solved}/{total})\n          </h5>\n          <div className=\"col-6 my-2\">\n            <BuyModeButtonComponent />\n          </div>\n        </div>\n        </div>\n        <div className=\"row flex-fill\" style={{ position: 'relative' }}>\n          <div\n            className=\"overflow-auto h-100 w-100 d-flex flex-column p-2\"\n            style={{ position: 'absolute' }}\n          >\n            <AnagramaSolutionsComponent />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col text-center h1\">\n          <AnagramaWordComponent />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col text-center h1\">\n          <AnagramaLettersComponent />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { setAnagramaData } from '../features/anagramaGame/anagramaGameSlice'\nimport {\n  convertRachacucaToAnagramaGame,\n  getRachacucaAnagrama,\n} from '../features/anagramaGame/AnagramAPI'\nimport { GetSavedGame } from '../features/anagramaGame/SavedGame'\nimport { AnagramaGameComponent } from './game'\n\ninterface GameLoaderParams {\n  anagrama: string\n}\n\nexport function GameLoaderComponent() {\n  const dispatch = useDispatch()\n  const { anagrama } = useParams() as GameLoaderParams\n  const [loaded, setLoaded] = useState<boolean>(false)\n  const [error, setError] = useState<string | null>(null)\n  useEffect(() => {\n    ;(async () => {\n      const normalizedAnagrama = anagrama.split('').sort().join('')\n      const saved = GetSavedGame(normalizedAnagrama)\n      if (saved) {\n        dispatch(setAnagramaData(saved.game))\n        setLoaded(true)\n      } else {\n        try {\n          const gameData = convertRachacucaToAnagramaGame(\n            await getRachacucaAnagrama(normalizedAnagrama)\n          )\n          dispatch(setAnagramaData(gameData))\n          setLoaded(true)\n        } catch (e) {\n          setError('Os dados deste jogo não puderam ser carregados.')\n        }\n      }\n    })()\n  }, [anagrama, dispatch])\n\n  if (error !== null) {\n    return <div>{error}</div>\n  }\n  if (loaded) {\n    return (\n        <AnagramaGameComponent />\n    )\n  }\n  return <div>Carregando: {anagrama}</div>\n}\n","import React, { useState } from 'react'\nimport { useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { getLastRachacucaGame } from '../features/anagramaGame/AnagramAPI'\n\nexport function LatestGameComponent() {\n  const [anagrama, setAnagrama] = useState<string | null>(null)\n  const [error, setError] = useState<string | null>(null)\n  useEffect(() => {\n    ;(async () => {\n      try {\n        setAnagrama(await getLastRachacucaGame())\n      } catch (e) {\n        setError('Ocorreu um erro!')\n      }\n    })()\n  }, [])\n\n  if (error != null) {\n    return <Redirect to={`/`} />\n  }\n\n  if (anagrama != null) {\n    return <Redirect to={`/game/${anagrama}`} />\n  }\n\n  return <div>carregando...</div>\n}\n","import React, { useState } from 'react'\nimport { useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { GetLatestSavedGameAnagram } from '../features/anagramaGame/SavedGame'\n\nexport function LatestSaveComponent() {\n  const [anagrama, setAnagrama] = useState<string | null>(null)\n  const [error, setError] = useState<string | null>(null)\n  useEffect(() => {\n    const latestSaveAnagram = GetLatestSavedGameAnagram()\n    if (latestSaveAnagram === null) {\n      setError('Não há jogos salvos!')\n    } else {\n      setAnagrama(GetLatestSavedGameAnagram())\n    }\n  }, [])\n\n  if (error != null) {\n    return <Redirect to={`/`} />\n  }\n\n  if (anagrama != null) {\n    return <Redirect to={`/game/${anagrama}`} />\n  }\n\n  return <div>carregando...</div>\n}\n","import { Button } from 'react-bootstrap'\nimport React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport function MainComponent() {\n  return (\n    <div className=\"d-flex justify-content-center flex-column flex-fill\">\n      <div className=\"d-grid gap-2\">\n        <Button className=\"btn-lg\" as={NavLink} to=\"/game/latest\">\n          Ir para a palavra mais recente\n        </Button>\n        <Button className=\"btn-lg\" as={NavLink} to=\"/game/continue\">\n          Continuar o último jogo salvo\n        </Button>\n        <Button className=\"btn-lg\" as={NavLink} to=\"/game/list\">\n          Listar todos os jogos\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import { Navbar, Nav } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\n\nexport function TopMenuComponent() {\n  return (\n    <Navbar bg=\"light\" variant=\"light\" expand=\"md\">\n      <Navbar.Brand as={NavLink} to=\"/\">\n        Anagramas\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link as={NavLink} to=\"/game/latest\">\n            Última Palavra\n          </Nav.Link>\n          <Nav.Link as={NavLink} to=\"/game/continue\">\n            Continuar Jogo Salvo\n          </Nav.Link>\n          <Nav.Link as={NavLink} to=\"/game/list\">\n            Lista de Jogos\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n","import React from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport './App.css'\nimport { GameListComponent } from './components/game-list'\nimport { GameLoaderComponent } from './components/game-loader'\nimport { LatestGameComponent } from './components/latest-game'\nimport { LatestSaveComponent } from './components/latest-save'\nimport { MainComponent } from './components/main'\nimport { TopMenuComponent } from './components/top-menu'\n\nfunction hasTouch() {\n  return 'ontouchstart' in document.documentElement\n         || navigator.maxTouchPoints > 0\n}\n\nfunction App() {\n  if (!hasTouch()) document.body.className += ' hasHover'\n  return (\n    <Router>\n      <div className=\"container-fluid h-100 d-flex flex-column\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <TopMenuComponent />\n          </div>\n        </div>\n        <div className=\"row flex-fill\">\n          <div className=\"col d-flex flex-column\">\n            <Switch>\n              <Route path=\"/\" exact>\n                <MainComponent />\n              </Route>\n              <Route path=\"/game/continue\" exact>\n                <LatestSaveComponent />\n              </Route>\n              <Route path=\"/game/list\" exact>\n                <GameListComponent />\n              </Route>\n              <Route path=\"/game/latest\" exact>\n                <LatestGameComponent />\n              </Route>\n              <Route path=\"/game/:anagrama\" component={GameLoaderComponent}/>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\n\nexport interface ConfigState {\n  autoScroll: boolean\n}\n\nconst initialState: ConfigState = {\n  autoScroll: true\n}\n\nexport const configSlice = createSlice({\n  name: 'shop',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    setAutoScroll: (state, action: PayloadAction<boolean>) => {\n      state.autoScroll = action.payload\n    },\n    toggleAutoScroll: (state) => {\n      state.autoScroll = !state.autoScroll\n    },\n  },\n})\n\nexport const {\n  setAutoScroll,\n  toggleAutoScroll\n} = configSlice.actions\n\nexport const selectConfig = (state: RootState) => state.config\nexport const selectAutoScroll = (state: RootState) => state.config.autoScroll\n\n\nexport default configSlice.reducer\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport anagramaGameReducer from '../features/anagramaGame/anagramaGameSlice'\nimport shopReducer from '../features/anagramaGame/shopSlice'\nimport configReducer from '../features/anagramaGame/configSlice'\n\nexport const store = configureStore({\n  reducer: {\n    anagramaGame: anagramaGameReducer,\n    shop: shopReducer,\n    config: configReducer,\n  },\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport { store } from './app/store'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}